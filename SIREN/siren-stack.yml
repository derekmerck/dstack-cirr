version: '3.3'


configs:
  siren_services.yml:
    file: ./siren_services.yml
  siren_routes.yml:
    file: ./siren_routes.yml


services:

  # -------------------------------
  # MANAGER NODE SERVICES
  # -------------------------------

  portainer:
    image: portainer/portainer
    command: -H tcp://tasks.portainer-agent:9001 --tlsskipverify --admin-password ${PORTAINER_PASSWORD}
    ports:
      - "9000:9000"
    networks:
      - service
    environment:
      TZ: "America/New_York"
    deploy:
      replicas: 1
      labels:
        - "traefik.port=9000"
        - "traefik.frontend.rule=PathPrefixStrip:/portainer/"
      placement:
        constraints:
          - node.role==manager


  traefik:
    image: traefik
    command: "--api --docker --docker.swarmmode"
    ports:
      - "80:80"
      - "433:433"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      TZ: "America/New_York"
    deploy:
      placement:
        constraints:
          - node.role==manager


  # -------------------------------
  # GLOBAL SERVICES
  # -------------------------------

  portainer-agent:
    image: portainer/agent
    environment:
      AGENT_CLUSTER_ADDR: tasks.portainer-agent
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    networks:
      - service
    deploy:
      mode: global
      placement:
        constraints:
          - node.platform.os==linux


  # -------------------------------
  # DATA BACKEND SERVICES
  # -------------------------------

  splunk:
    image: splunk/splunk
    ports:
      - "8100:8000"
      - "8188:8088"
      - "8189:8089"
    volumes:
      - /data/splunk:/opt/splunk/etc
    environment:
      SPLUNK_START_ARGS:        "--accept-license"
      SPLUNK_PASSWORD:          ${SPLUNK_PASSWORD}
      TZ:                       "America/New_York"
    deploy:
      replicas: 1
      labels:
        - "traefik.port=8000"
        - "traefik.frontend.rule=PathPrefixStrip:/splunk/"
      placement:
        constraints:
          - node.labels.storage==true
      resources:
        limits:
          cpus:   '2'
          memory: 4G
        reservations:
          cpus: '0.5'
          memory: 2G


  postgres:
    image: postgres
    volumes:
      - /data/postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_USER:            orthanc
      POSTGRES_PASSWORD:        ${POSTGRES_PASSWORD}
      TZ:                       "America/New_York"
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.storage==true
      resources:
        limits:
          cpus:   '2'
          memory: 4G
        reservations:
          cpus: '0.5'
          memory: 2G


  # -------------------------------
  # UNCONSTRAINED SERVICES
  # -------------------------------

  orthanc-hobit:
    image: derekmerck/orthanc-wbv
    environment:
      ORTHANC_NAME:             HOBIT Imaging
      ORTHANC_PASSWORD:         ${ORTHANC_PASSWORD}
      ORTHANC_STORE_COMPRESSED: "true"
      ORTHANC_WBV_ENABLED:      "true"
      ORTHANC_PG_ENABLED:       "true"
      ORTHANC_PG_STORE_DICOM:   "true"
      ORTHANC_PG_DATABASE:      hobit
      ORTHANC_PG_HOST:          postgres
      ORTHANC_PG_USER:          orthanc
      ORTHANC_PG_PASSWORD:      ${POSTGRES_PASSWORD}
      ORTHANC_VERBOSE:          "true"
      TZ:                       "America/New_York"
    deploy:
      replicas: 1
      labels:
        - "traefik.port=8042"
        - "traefik.frontend.rule=PathPrefixStrip:/hobit/"


  orthanc-boost:
    image: derekmerck/orthanc-wbv
    environment:
      ORTHANC_NAME:             BOOST Imaging
      ORTHANC_PASSWORD:         ${ORTHANC_PASSWORD}
      ORTHANC_STORE_COMPRESSED: "true"
      ORTHANC_WBV_ENABLED:      "true"
      ORTHANC_PG_ENABLED:       "true"
      ORTHANC_PG_STORE_DICOM:   "true"
      ORTHANC_PG_DATABASE:      boost
      ORTHANC_PG_HOST:          postgres
      ORTHANC_PG_USER:          orthanc
      ORTHANC_PG_PASSWORD:      ${POSTGRES_PASSWORD}
      ORTHANC_VERBOSE:          "true"
      TZ:                       "America/New_York"
    deploy:
      replicas: 1
      labels:
      - "traefik.port=8042"
      - "traefik.frontend.rule=PathPrefixStrip:/boost/"


  diana-watcher:
    image: derekmerck/diana
    working_dir: /opt/diana
    # command: sh -c "git pull && pip install -e packages/diana && python3 /opt/diana/apps/cli/diana-watcher.py -s /siren_services.yml -c /siren_routes.yml"
    configs:
      - siren_services.yml
      - siren_routes.yml
    environment:
      ORTHANC_PASSWORD:     ${ORTHANC_PASSWORD}
      SPLUNK_HEC_TOKEN:     ${SPLUNK_HEC_TOKEN}
      TZ:                   "America/New_York"
    deploy:
      replicas: 1
